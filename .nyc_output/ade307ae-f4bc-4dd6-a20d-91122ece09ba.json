{"C:\\Users\\Andela\\Documents\\atlp\\project-elite\\src\\test\\test.js":{"path":"C:\\Users\\Andela\\Documents\\atlp\\project-elite\\src\\test\\test.js","statementMap":{"0":{"start":{"line":3,"column":12},"end":{"line":3,"column":51}},"1":{"start":{"line":5,"column":16},"end":{"line":5,"column":60}},"2":{"start":{"line":7,"column":11},"end":{"line":7,"column":52}},"3":{"start":{"line":9,"column":39},"end":{"line":9,"column":95}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"6":{"start":{"line":15,"column":0},"end":{"line":21,"column":3}},"7":{"start":{"line":16,"column":2},"end":{"line":20,"column":5}},"8":{"start":{"line":17,"column":4},"end":{"line":19,"column":7}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":51}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":97}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":20},"end":{"line":15,"column":21}},"loc":{"start":{"line":15,"column":32},"end":{"line":21,"column":1}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":35},"end":{"line":16,"column":36}},"loc":{"start":{"line":16,"column":51},"end":{"line":20,"column":3}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":60},"end":{"line":17,"column":61}},"loc":{"start":{"line":17,"column":75},"end":{"line":19,"column":5}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":94}},"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":94}}],"line":9},"1":{"loc":{"start":{"line":9,"column":46},"end":{"line":9,"column":67}},"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":3,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":3,"1":1,"2":1,"3":1},"b":{"0":[1,2],"1":[3,3]},"inputSourceMap":{"version":3,"sources":["test.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","app","get","then","res","body","status","be","equal"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;AACAF,iBAAKG,MAAL;;AACAC,QAAQ,CAAC,SAAD,EAAY,YAAM;AACtBC,EAAAA,EAAE,CAAC,4BAAD,EAA+B,UAACC,IAAD,EAAU;AACvCN,qBAAKO,OAAL,CAAaC,eAAb,EACCC,GADD,CACK,GADL,EAECC,IAFD,CAEM,UAACC,GAAD,EAAS;AACXA,MAAAA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBV,MAAhB,CAAuBW,EAAvB,CAA0BC,KAA1B,CAAgC,GAAhC,GACAT,IAAI,EADJ;AAEH,KALD;AAMH,GAPC,CAAF;AAQH,CATO,CAAR","sourceRoot":"C:\\Users\\Andela\\Documents\\atlp\\project-elite\\src\\test\\","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../app';\r\n\r\nchai.use(chaiHttp);\r\nchai.should();\r\ndescribe('Welcome', () => {\r\n    it('/user should get a message', (done) => {\r\n        chai.request(app)\r\n        .get('/')\r\n        .then((res) => {\r\n            res.body.status.should.be.equal(200),\r\n            done()\r\n        });\r\n    })\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab814f9f17b5861a0635ca81679e56cda86975f0","contentHash":"d8f24d64deb709f4ee6dee6560a3dc3d5dc88766325e15923370f3d046c4ed1f"},"C:\\Users\\Andela\\Documents\\atlp\\project-elite\\src\\app.js":{"path":"C:\\Users\\Andela\\Documents\\atlp\\project-elite\\src\\app.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":18},"end":{"line":10,"column":64}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":95}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"7":{"start":{"line":22,"column":10},"end":{"line":22,"column":36}},"8":{"start":{"line":23,"column":11},"end":{"line":23,"column":35}},"9":{"start":{"line":67,"column":0},"end":{"line":72,"column":3}},"10":{"start":{"line":68,"column":2},"end":{"line":71,"column":5}},"11":{"start":{"line":73,"column":0},"end":{"line":75,"column":3}},"12":{"start":{"line":74,"column":2},"end":{"line":74,"column":54}},"13":{"start":{"line":76,"column":15},"end":{"line":76,"column":18}},"14":{"start":{"line":77,"column":0},"end":{"line":77,"column":30}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":97}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":67,"column":13},"end":{"line":67,"column":14}},"loc":{"start":{"line":67,"column":33},"end":{"line":72,"column":1}},"line":67},"2":{"name":"(anonymous_2)","decl":{"start":{"line":73,"column":17},"end":{"line":73,"column":18}},"loc":{"start":{"line":73,"column":29},"end":{"line":75,"column":1}},"line":73}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":94}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":94}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":35}},"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":27}},{"start":{"line":23,"column":31},"end":{"line":23,"column":35}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":3,"1":1,"2":1},"b":{"0":[0,3],"1":[3,3],"2":[1,1]},"inputSourceMap":{"version":3,"sources":["app.js"],"names":["dotenv","config","app","port","process","env","PORT","get","req","res","status","json","message","listen","console","log"],"mappings":"AAAA;;;;;;;AACA;;AACA;;AACA;;;;AACA;AACA;AACA;AACA;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,IAAAA,MAAM,EAAE,GADW;AAEnBE,IAAAA,OAAO,EAAE;AAFU,GAArB;AAID,CALD;AAOAV,GAAG,CAACW,MAAJ,CAAWV,IAAX,EAAiB,YAAM;AACrBW,EAAAA,OAAO,CAACC,GAAR,kCAAsCZ,IAAtC;AACD,CAFD;eAIeD,G","sourceRoot":"C:\\Users\\Andela\\Documents\\atlp\\project-elite\\src\\","sourcesContent":["\"use strict\";\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport dotenv from 'dotenv';\r\n// import { require } from 'yargs';\r\n// import swaggerJsDoc from 'swagger-jsdoc';\r\n// const swaggerJsDoc = require('swagger-jsdoc');\r\n// const swaggerUi = require('swagger-ui-express')\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\nconst port = process.env.PORT || 5000;\r\n\r\n// const swaggerOptions ={\r\n//   swaggerDefinition: {\r\n//     info: {\r\n//       title : \"Pharamacy-locator api\",\r\n//       description : \"Pharmacy-locator api documentation\",\r\n//       contact : {\r\n//         name : \"Pharmacy Locator\"\r\n//       },\r\n//       servers : [\"http://localhost:5000\"]\r\n//     }\r\n//   },\r\n//   apis:[\"app.js\"]\r\n// };\r\n\r\n// // app.use(express.json()); \r\n\r\n// // app.use(bodyParser.json());\r\n\r\n// const swaggerDocs = swaggerJsDoc(swaggerOptions);\r\n// app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocs));\r\n\r\n// //Routes\r\n// /**\r\n//  * @swagger\r\n//  * /customers:\r\n//  *  get:\r\n//  *    description:use to request all customerss\r\n//  *    responses:\r\n//  *       '200':\r\n//  *         description: A successful response\r\n//  */\r\n// app.get(\"/\", (req, res) => {\r\n//   console.log(\"request\");\r\n//   res.status(200).send(\"customer results\");\r\n// });\r\n\r\n// /**\r\n// * @swagger\r\n// * /customer:\r\n// *  put:\r\n// *    description:use to request all customerss\r\n// *    responses:\r\n// *       '201':\r\n// *         description: A successful response\r\n// */\r\n// app.put(\"/customer\", (req, res) => {\r\n//  res.status(201).send(\"customer results\");\r\n// });\r\n\r\napp.get('/', (req, res) => {\r\n  res.status(200).json({\r\n    status: 200,\r\n    message: \"Pharmacy locator\",\r\n  });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server running on port ${port}`);\r\n});\r\n\r\nexport default app;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5364d46741468d845f5a443d75d67af63e44c955","contentHash":"d395d373277e378a734a39899ceb34ba0f11dc208440523de920d60c1991a50f"}}